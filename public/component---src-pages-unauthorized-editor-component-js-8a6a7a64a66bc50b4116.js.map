{"version":3,"file":"component---src-pages-unauthorized-editor-component-js-8a6a7a64a66bc50b4116.js","mappings":"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","sources":["webpack://markdown-editor/./src/pages/UnauthorizedEditorComponent.js"],"sourcesContent":["import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport '../style.css'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { nightOwl } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { stringify } from '@firebase/util'\nimport { Center } from '@react-three/drei'\n\n\n\nconst dataLoad = [\n    {\n        entry: `# Thanks for checking out my portfolio project!\\n\\n### This is the unauthorized version of the project\\n\\nIt is fully functional, but doesn't make any calls to or from firebase unless you sign in with Google, so any changes made here will not persist if the page is reloaded.\\n \\n If you sign in, you have full CRUD functionality with the data being stored in a Google Firestore backend.\\n\\n![](https://i.ytimg.com/vi/QcsAb2RR52c/maxresdefault.jpg)`,\n        lastEdited: 1658756930912,\n        id: 'DGTQsw2dKlWO9kVbBGtp'\n    },\n    {\n        entry: `# check out code syntax highlighting!\\n\\n> javascript\\n\\n\\`\\`\\`js\\n// uncle bob says no comments!\\n\\nlet counter = 0\\nconst functionName = () => {\\n     counter++\\n}\\n\\`\\`\\`\\n\\n> css\\n\\n\\`\\`\\`css\\n.markdown {\\n     padding: 25px;\\n     margin: 5px;\\n}\\n\\`\\`\\``,\n        lastEdited: 1658756930000,\n        id: '3hzhFF3qN7e6TSOO0r0Z'\n    }\n]\n\nlet unauthorizedDocumentCounter = 1\n\nexport default function AuthorizedEditorComponent(props) {\n\n    const [documentIdSelected, setDocumentIdSelected] = React.useState('DGTQsw2dKlWO9kVbBGtp')\n    const [currentEditorText, setCurrentEditorText] = React.useState(dataLoad[0].entry)\n    const [documentsListShowing, setDocumentsListShowing] = React.useState(true)\n    const [unauthorizedData, setUnauthorizedData] = React.useState()\n\n    React.useEffect(() => {\n        setUnauthorizedData(dataLoad)\n        // setCurrentEditorText(dataLoad[1].entry)\n\n    }, [])\n\n    const selectDocumentAndSetCurrentEditorText = (documentId, documentEntry) => {\n        setDocumentIdSelected(documentId)\n        setCurrentEditorText(documentEntry)\n    }\n    \n    const updateOfflineData = (documentId, eventValue, shouldSort) => {\n        let x = []\n        x = unauthorizedData\n        x = x.map(obj => {\n            if (obj.id === documentId) {\n                \n                    return {...obj, entry: eventValue, lastEdited: Date.now()}\n            }\n            return obj\n        })\n        if (shouldSort) {\n            x.sort((a, b) => b.lastEdited - a.lastEdited)\n        }\n        setUnauthorizedData(x)\n        setCurrentEditorText(eventValue)\n    }\n\n    const addNewDocument = () => {\n        let defaultEntry = \"yer\"\n        const newDocument = {\n            entry: defaultEntry,\n            lastEdited: Date.now(),\n            id: unauthorizedDocumentCounter\n        }\n        let x = []\n        x = unauthorizedData\n        x.unshift(newDocument)\n        setUnauthorizedData(x)\n        setDocumentIdSelected(unauthorizedDocumentCounter)\n        setCurrentEditorText(defaultEntry)\n        unauthorizedDocumentCounter++;\n    }\n\n    const deleteDocument = async () => {\n        setDocumentIdSelected(\"\")\n        setCurrentEditorText(\"\")\n        const indexOfSelectedDocument = unauthorizedData.findIndex((document => document.id == documentIdSelected));\n        console.log(indexOfSelectedDocument)\n        unauthorizedData.splice(indexOfSelectedDocument, 1)\n    }\n\n    return (\n        <main className=\"app\">\n            <section className='buttonsTop'>\n                <div>\n                    <button onClick={props.signIn}\n                        className=\"button6\"\n                    \n                    > Sign In</button>\n                    <button \n                        onClick={() => addNewDocument()}\n                        className=\"button6\">Add</button>\n                    {documentIdSelected\n                    ?\n                    <button onClick={() => deleteDocument(documentIdSelected)}\n                        className=\"button6\"\n                    > Delete</button>\n                    :\n                    \"\"\n                    }\n                </div>\n                <div style={{\n                    display: 'flex',justifyContent:'center', alignContent:'center'\n                }}>\n                    {/* <button onClick={() => updateSettingsDocumentOnFirebase()}\n                            className=\"button6\"> \n                        {autoSave ? \"Autosave: ON\" : \"Autosave: OFF\"}\n                    </button> */}\n                    {/* <button \n                        onClick={props.signOut}\n                        className=\"button6\"\n                        style={{color: 'grey'}}\n                        >Sign Out\n                    </button> */}\n                    <h1\n                        className='button6 mobileHamburger'\n                        onClick={() => setDocumentsListShowing(!documentsListShowing)}>\n                        â˜°\n                    </h1>\n                </div>\n            </section>\n            <div className=\"layout\">\n                <nav>\n                        \n                    <ul\n                        className={(documentsListShowing) ? \"\" : \"hidden\"}>\n                            {unauthorizedData &&\n                                unauthorizedData.map((document) => {\n                                    return (\n                                        <li \n                                            className={(document.id === 'userSettings') ? \"hidden\" : \"navItem\"}\n                                            key={document.id}\n                                            onClick={() => selectDocumentAndSetCurrentEditorText(document.id, document.entry, document.backgroundColor)}\n                                            style={{borderRightColor: document.backgroundColor}}>\n                                            <p \n                                                className='navItemEntry'>\n                                                    {document.entry ? document.entry : \"\"} \n                                            </p>\n                                        </li>\n                                    )\n                                }) \n                            }\n                    </ul>\n                    \n                </nav>\n                    {\n                        documentIdSelected ?\n                        <textarea\n                            className=\"textarea\"\n                            value={currentEditorText}\n                            // onChange={(e) => handleTyping(e.target.value)} \n                            onChange={(e) => updateOfflineData(documentIdSelected, (e.target.value), true)} \n                            \n                        />\n                        : \"\"\n                    }\n                    {/* <ReactMarkdown \n                    children={currentEditorText}\n                    className=\"markdown\"\n                    /> */}\n\n                   <ReactMarkdown\n                        children={currentEditorText}\n                        className=\"markdown\"\n                        components={{\n                        code({node, inline, className, children, ...props}) {\n                            const match = /language-(\\w+)/.exec(className || '')\n                            return !inline && match ? (\n                            <SyntaxHighlighter\n                                children={String(children).replace(/\\n$/, '')}\n                                style={nightOwl}\n                                language={match[1]}\n                                PreTag=\"div\"\n                                showLineNumbers={true}\n                                {...props}\n                            />\n                            ) : (\n                            <code className=\"markdown\" {...props}>\n                                {children}\n                            </code>\n                            )\n                        }\n                        }}\n                    /> \n            </div>\n        </main>   \n  )\n}\n"],"names":["dataLoad","entry","lastEdited","id","unauthorizedDocumentCounter","AuthorizedEditorComponent","props","React","documentIdSelected","setDocumentIdSelected","currentEditorText","setCurrentEditorText","documentsListShowing","setDocumentsListShowing","unauthorizedData","setUnauthorizedData","deleteDocument","indexOfSelectedDocument","findIndex","document","console","log","splice","className","onClick","signIn","newDocument","Date","now","x","unshift","style","display","justifyContent","alignContent","map","key","documentId","documentEntry","backgroundColor","borderRightColor","value","onChange","e","eventValue","target","shouldSort","obj","sort","a","b","children","components","code","node","inline","match","exec","String","replace","nightOwl","language","PreTag","showLineNumbers"],"sourceRoot":""}